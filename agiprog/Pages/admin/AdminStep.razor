@page "/AdminStep"
@using System.IO
@using BlazorInputFile
@inject IToastService toastService
@attribute [Authorize]
@using agiprog.Data
<h1>Create Steps</h1>

<hr id="eight" />


<EditForm class="container" Model="@step" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row md-5">

        <div class="col-md-5">

            <div class="form-group align-items-center">
                <label class="font-weight-bold" for="name">Name of the step</label>
                <InputText type="text" class="form-control" id="name" aria-describedby="emailHelp" @bind-Value="step.Name" placeholder="Enter name" />
                <small id="emailHelp" class="form-text text-muted">A good name equals a good start.</small>
            </div>

        </div>
        <div class="col-md-5">
            <div class="form-group align-items-center">
                <label class="font-weight-bold" for="description">Description of the step</label>
                <InputTextArea type="text" class="form-control" id="description" aria-describedby="descHelp" @bind-Value="step.Description" placeholder="Enter Description" />
                <small id="descHelp" class="form-text text-muted">A description can never be too small</small>
            </div>
        </div>

    </div>

    <div class="row md-5">
        <div class="col-md-5">
            <div class="form-group align-items-center">
                <label class="font-weight-bold" for="image">An image representing the step</label>
                <InputFile type="file" class="form-control-file" id="image" OnChange="HandleFileSelected" placeholder="Please choose an image" />
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group align-items-center">
                <label class="font-weight-bold" for="video">An optional URL for a video representing the step</label>
                <InputText type="url" class="form-control-file" id="video" @bind-Value="step.VideoUrl" placeholder="Enter URL" />
            </div>
        </div>

    </div>

    <div class="row md-5">
        <div class="col-md-5">
            <div class="form-group align-items-center">
                <img class="mr-3" src="@imageDataUrl">
            </div>
        </div>
    </div>


    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<h1>Created steps</h1>

<div class="list-group">
    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start active">
        <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-1">List group item heading</h5>
            <small>3 days ago</small>
        </div>
        <p class="mb-1">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>
        <small>Donec id elit non mi porta.</small>
    </a>
    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
        <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-1">List group item heading</h5>
            <small class="text-muted">3 days ago</small>
        </div>
        <p class="mb-1">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>
        <small class="text-muted">Donec id elit non mi porta.</small>
    </a>
    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
        <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-1">List group item heading</h5>
            <small class="text-muted">3 days ago</small>
        </div>
        <p class="mb-1">Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus varius blandit.</p>
        <small class="text-muted">Donec id elit non mi porta.</small>
    </a>
</div>



@code {
    private Step step = new Step();

    private String imageDataUrl { get; set; }

    private List<String> AllowedExtensions = new List<string> { ".png", ".jpg" };

    private void HandleValidSubmit()
    {

    }

    private async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.First();
        if (file == null)
        {
            toastService.ShowError("Uploaded file did not exist");
            return;
        }

        // Create a new instance of a 'FileInfo' object.
        FileInfo fileInfo = new FileInfo(file.Name);

        // I don't know if it's even possible for an extension to be upper case
        var extension = fileInfo.Extension.ToLower();

        // verify the extension exists
        if (!String.IsNullOrWhiteSpace(fileInfo.Extension))
        {

            var format = "image/png";
            // If the allowed extensions // fixed issue where uploading
            if (AllowedExtensions.Contains(fileInfo.Extension.ToLower()))
            {
                var resizedImageFile = await file.ToImageFileAsync(format,
               1000, 1000);
                var buffer = new byte[resizedImageFile.Size];
                await resizedImageFile.Data.ReadAsync(buffer);
                var imageDataUrl =
                    $"data:{format};base64,{Convert.ToBase64String(buffer)}";
                this.imageDataUrl = imageDataUrl;
                step.Img = this.imageDataUrl;
                StateHasChanged();
            }
            else
            {
                toastService.ShowError("You must give either .png or .jpg format");
                return;
            }
        }
        else
        {
            toastService.ShowError("Your file must have an extension");
            return;
        }

    }
}

