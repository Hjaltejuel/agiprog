@page "/meeting/{MeetingId}"
@using agiprog.Data
@inject MeetingService meetingService
@inject RoadmapService roadmapService
@inject NavigationManager NavigationManager

<section>
    <div class="wrapper">
        <h1 id="bouncetext" class="bouncetext alpha lato thin thick-header-line uppercase ls-small">
            Welcome to your progress board : @(meeting?.Roadmap?.Name)
        </h1>
        <h5 style="width:100%" class="text-md-center">
            @(meeting?.Roadmap?.Description)
        </h5>
    </div>
</section>

@if (meeting?.Roadmap?.RoadmapSteps != null)
{
<div class="roadmap">

    @{var i = 1; }
    @foreach (var step in meeting.Roadmap.RoadmapSteps.Select(s => s.Step))
    {
        <div class="box @(i%2 == 0 ? "right" : "left")">
            <agiprog.Components.Box stepId="@step.StepId" OnClick="setModal"></agiprog.Components.Box>
        </div>
        i++;
    }

</div>
    }
    else
    {
        <div>
            loading...
        </div>
    }
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" style="" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-black-50" id="exampleModalLongTitle">@Modal.Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Description : @Modal.Description
                <img style="max-width:100%" class="mr-3" src="@Modal.Img">
                <iframe style="width:100%; height:25em;" src="@Modal.VideoUrl"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public String MeetingId { get; set; }

    private Step Modal = new Step();

    public agiprog.Data.Meeting meeting { get; set; }

    private bool fadeaway { get; set; }

    private void setModal(Step step)
    {
        this.Modal = step;

    }

    private void cfadeaway()
    {
        fadeaway = true;
    }

    private async Task complete()
    {
        meeting.CompletedSteps = meeting.CompletedSteps + 1;
        await meetingService.UpdateMeeting(meeting);
        StateHasChanged();
    }

    protected async override Task OnInitializedAsync()
    {
        fadeaway = false;
        var result = await meetingService.FindMeeting(MeetingId);
        if (result == null)
            NavigationManager.NavigateTo("/");
        meeting = result;
        StateHasChanged();


    }
}
